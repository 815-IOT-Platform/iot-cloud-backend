<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iot.tpc.mapper.TpcMqProducerMapper">
    
    <resultMap type="TpcMqProducer" id="BaseResultMap">
        <result property="id"    column="id"    />
        <result property="version"    column="version"    />
        <result property="applicationName"    column="application_name"    />
        <result property="producerCode"    column="producer_code"    />
        <result property="producerName"    column="producer_name"    />
        <result property="queryMessageUrl"    column="query_message_url"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="creatorId"    column="creator_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="lastOperatorId"    column="last_operator_id"    />
        <result property="updateTime"    column="update_time"    />
        <result property="companyId"    column="company_id"    />
        <result property="companyName"    column="company_name"    />
    </resultMap>

    <sql id="Base_Column_List">
        ${alias}.id,
        ${alias}.version,
        ${alias}.application_name,
        ${alias}.producer_code,
        ${alias}.producer_name,
        ${alias}.query_message_url,
        ${alias}.status,
        ${alias}.remark,
        ${alias}.create_by,
        ${alias}.creator_id,
        ${alias}.create_time,
        ${alias}.update_by,
        ${alias}.last_operator_id,
        ${alias}.update_time
    </sql>

    <sql id="Base_Topic_Column_List">
        ${alias}.version as topic_version,
        ${alias}.producer_id,
        ${alias}.topic_code,
        ${alias}.topic_name,
        ${alias}.mq_type,
        ${alias}.msg_type,
        ${alias}.status as topic_status,
        ${alias}.remarks as topic_remarks,
        ${alias}.create_by as topic_create_by,
        ${alias}.creator_id as topic_created_time,
        ${alias}.create_time as topic_create_time,
        ${alias}.update_by as topic_update_by,
        ${alias}.last_operator_id as topic_last_operator_id,
        ${alias}.update_time as topic_update_time
    </sql>
    <delete id="deletePublishByProducerId">
        DELETE FROM an_tpc_mq_publish WHERE producer_id = #{producerId}
    </delete>

    <resultMap id="TpcMqProducerVoResultMap" extends="BaseResultMap" type="com.iot.tpc.vo.TpcMqProducerVo">
        <collection property="mqTopicVoList" ofType="com.iot.tpc.vo.TpcMqTopicVo">
            <result property="topicCode" column="topic_code"/>
            <result property="topicName" column="topic_name"/>
            <result property="status" column="topic_status"/>
            <result property="updateBy" column="topic_update_by"/>
            <result property="updateTime" column="topic_update_time"/>
        </collection>
    </resultMap>

    <select id="listTpcMqProducerVoWithPage" resultMap="TpcMqProducerVoResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="alias" value="producer"/>
        </include>
        ,
        <include refid="Base_Topic_Column_List">
            <property name="alias" value="topic"/>
        </include>
        from an_tpc_mq_producer producer
        LEFT JOIN an_tpc_mq_publish publish ON producer.id = publish.producer_id
        LEFT JOIN an_tpc_mq_topic topic on topic.id = publish.topic_id
        where 1=1
        <if test="producerCode != null and producerCode !=''">
            AND producer.producer_code LIKE concat(#{producerCode}, '%')
        </if>
        <if test="producerName != null and producerName !=''">
            AND producer.producer_name LIKE concat(#{producerName}, '%')
        </if>
        <if test="status != null and status !=''">
            AND producer.status = #{status,jdbcType=INTEGER}
        </if>
    </select>

    <resultMap id="TpcMqPublishVoResultMap" extends="BaseResultMap" type="com.iot.tpc.vo.TpcMqPublishVo">
        <result property="topicCode" column="topic_code"/>
        <result property="topicName" column="topic_name"/>
    </resultMap>

    <select id="listTpcMqPublishVoWithPage" resultMap="TpcMqPublishVoResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="alias" value="producer"/>
        </include>
        ,
        topic.topic_code,
        topic.topic_name
        from
        an_tpc_mq_publish publish
        LEFT JOIN an_tpc_mq_producer producer ON publish.producer_id = producer.id
        LEFT JOIN an_tpc_mq_topic topic on topic.id = publish.topic_id
        WHERE 1 = 1
        <if test="producerCode != null and producerCode !=''">
            AND producer.producer_code LIKE concat(#{producerCode}, '%')
        </if>
        <if test="status != null and status !=''">
            AND producer.status = #{status,jdbcType=INTEGER}
        </if>
    </select>
    <select id="getByPid" resultType="com.iot.tpc.domain.TpcMqProducer">
        SELECT
        <include refid="Base_Column_List">
            <property name="alias" value="producer"/>
        </include>
        from an_tpc_mq_producer producer where producer.producer_code = #{pid}
    </select>
    
</mapper>