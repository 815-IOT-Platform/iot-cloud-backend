<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iot.honeyBot.mapper.TableMapper">

    <resultMap id="BaseResultMap" type="com.iot.honeyBot.model.domain.PotData">
        <id column="ts" jdbcType="TIMESTAMP" property="ts" />
        <result column="value" jdbcType="VARCHAR" property="value" />
    </resultMap>

    <update id="createSTable" parameterType="com.iot.honeyBot.model.domain.TableMetadata">
        create table if not exists #{dbname}.#{tablename}
        <foreach collection="fields" item="field" index="index" open="(" close=")" separator=",">
            #{field.name} #{field.type}
        </foreach>
<!--        TAGS-->
<!--        <foreach collection="tags" item="tag" index="index" open="(" close=")" separator=",">-->
<!--            #{tag.name} #{tag.type}-->
<!--        </foreach>-->
    </update>

    <update id="dropTable" parameterType="java.lang.String">
        drop #{tablename}
    </update>

    <select id="selectAll" parameterType="com.iot.honeyBot.model.domain.SearchPotDo" resultMap="BaseResultMap">
        select * from #{node}.#{protocol}
        <if test="startTime != null">
            where ts &gt;= #{startTime}
        </if>
        order by ts desc
    </select>

    <select id="selectCnt" parameterType="com.iot.honeyBot.model.domain.SearchPotDo" resultType="java.lang.Integer">
        select count(*) from #{node}.#{protocol}
    </select>

    <select id="getAlarmData" resultMap="BaseResultMap">
        select * from honeypot.alarm order by ts desc
    </select>

</mapper>